Когда после аннотировано @Getter и/или @Setter,
Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
 В таком случае данная логика будет применяться к каждому из его полей.
 Когда после аннотировано @Getter и/или @Setter,
 Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
 Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
 Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
 и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
 Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
 действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
 Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
  В таком случае данная логика будет применяться к каждому из его полей.
  Когда после аннотировано @Getter и/или @Setter,
  Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
  Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
  Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
  и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
  Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
  действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
  Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
   В таком случае данная логика будет применяться к каждому из его полей.
   Когда после аннотировано @Getter и/или @Setter,
   Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
   Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
   Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
   и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
   Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
   действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
   Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
    В таком случае данная логика будет применяться к каждому из его полей.
    Когда после аннотировано @Getter и/или @Setter,
    Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
    Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
    Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
    и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
    Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
    действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
    Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
     В таком случае данная логика будет применяться к каждому из его полей.
     Когда после аннотировано @Getter и/или @Setter,
     Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
     Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
     Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
     и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
     Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
     действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
     Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
      В таком случае данная логика будет применяться к каждому из его полей.
      Когда после аннотировано @Getter и/или @Setter,
      Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
      Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
      Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
      и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
      Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
      действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
      Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
       В таком случае данная логика будет применяться к каждому из его полей.
       Когда после аннотировано @Getter и/или @Setter,
       Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
       Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
       Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
       и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
       Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
       действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
       Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
        В таком случае данная логика будет применяться к каждому из его полей.
        Когда после аннотировано @Getter и/или @Setter,
        Lombok автоматически сгенерирует заданный по умолчанию геттер и/или сеттер, соответственно.
        Заданная по умолчанию реализация геттеров просто берет на себя возврат аннотированного поля.
        Аналогично, заданная по умолчанию реализация сеттеров принимает один параметр того же типа, что и аннотированное поле,
        и просто устанавливает его в полученное значение. Когда поле под названием value аннотируется одновременно @Getter и @Setter,
        Lombok определит метод getValue() (или isValue(), если это поле типа boolean) и setValue(). Сгенерированный метод,
        действующий как геттер и сеттер, будет публичным (public), если не указан конкретный уровень доступа (AccessLevel).
        Допустимые значения  AccessLevel – это PUBLIC, PROTECTED, PACKAGE и PRIVATE. Обратите внимание: можно аннотировать и целый класс.
         В таком случае данная логика будет применяться к каждому из его полей.